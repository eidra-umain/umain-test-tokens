name: Design Tokens Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  process-tokens:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Style Dictionary
      run: |
        npm init -y
        npm install style-dictionary
        
    - name: Process tokens with Style Dictionary
      run: |
        # Ensure directories exist
        mkdir -p dispatches
        mkdir -p dist
        mkdir -p config
        
        # Check if dispatches/tokens.json exists, if not create it from root tokens.json
        if [ ! -f "dispatches/tokens.json" ]; then
          echo "dispatches/tokens.json not found, creating from root tokens.json"
          cp tokens.json dispatches/tokens.json
        fi
        
        # Create Style Dictionary configuration
        cat > config/style-dictionary.config.js << 'EOF'
        module.exports = {
          source: ['dispatches/tokens.json'],
          platforms: {
            dtcg: {
              transformGroup: 'dtcg',
              buildPath: 'dist/',
              files: [
                {
                  destination: 'tokens.json',
                  format: 'json/flat',
                  options: {
                    outputReferences: false
                  }
                },
                {
                  destination: 'tokens-dtcg.json',
                  format: 'json/dtcg'
                }
              ]
            }
          }
        };
        EOF
        
        # Run Style Dictionary transformation
        npx style-dictionary build --config config/style-dictionary.config.js
        
        # Copy the transformed tokens to root directory
        cp dist/tokens.json ./tokens.json
        
        # Also create a README for the tokens
        cat > README.md << 'EOF'
        # Design Tokens
        
        This repository contains design tokens for the project, automatically processed with Style Dictionary to DTCG format.
        
        ## Files
        
        - `tokens.json` - Main design tokens file (DTCG format, automatically generated)
        - `tokens-dtcg.json` - DTCG-compliant tokens file
        - `dispatches/tokens.json` - Source tokens file (updated by plugin)
        - `dist/` - Build output directory with transformed tokens
        
        ## Formats
        
        - **DTCG Format**: Standardized design token format following Design Token Community Group specifications
        - **JSON Flat**: Flattened structure for easy consumption
        - **Source Format**: Original plugin format for editing
        
        ## Usage
        
        The tokens are automatically processed with Style Dictionary and made available in the root directory.
        The plugin updates `dispatches/tokens.json` and this workflow transforms them to DTCG format.
        EOF
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if there are changes to commit
        if git diff --quiet; then
          echo "No changes to commit"
        else
          git add .
          git commit -m "Update design tokens (DTCG format) [skip ci]"
          git push origin HEAD:main
        fi
